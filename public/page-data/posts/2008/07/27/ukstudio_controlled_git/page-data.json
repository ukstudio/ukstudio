{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2008/07/27/ukstudio_controlled_git/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"28f3bed8-004b-5525-b326-6de961074c52","excerpt":"最近流行りのgitを使ってみようかなーってことでとりあえずukstudio.jpを全部gitで管理するようにした。 最終的に以下のような構成になった。  参考: MacPortsを使ってgitをインストールしてみた - Post-itみたいな gitはyumの標準リポジトリでは管理されてないので、外部リポジトリ(DAG…","html":"<p>最近流行りのgitを使ってみようかなーってことでとりあえずukstudio.jpを全部gitで管理するようにした。</p>\n<p>最終的に以下のような構成になった。</p>\n<p><a href=\"http://ukstudio.jp/wp-content/uploads/2008/07/git-ukstudio.png\"><img src=\"http://ukstudio.jp/wp-content/uploads/2008/07/git-ukstudio.png\" alt title=\"git-ukstudio\" width=\"284\" height=\"284\" class=\"alignnone size-medium wp-image-145\"></a></p>\n<h2>MacBookにgitをインストールする</h2>\nMacBookにgitをインストールするのは簡単だった。MacPortsですんなり入った。\n<p>参考: <a href=\"http://d.hatena.ne.jp/from_kyushu/20080414/git_on_mac\">MacPortsを使ってgitをインストールしてみた - Post-itみたいな</a></p>\n<h2>サーバにgitをインストールする</h2>\nサーバはslicehostのCentOS5.1を使用。インストールされてるsvnが1.4なのでこちらは一旦remove。\n<pre lang=\"bash\">\n$ yum remove subversion\n</pre>\n<p>gitはyumの標準リポジトリでは管理されてないので、外部リポジトリ(<a href=\"http://dag.wieers.com/rpm/\">DAG</a>)を登録してそこからインストールした。</p>\n<pre lang=\"bash\">\n$ wget http://dag.wieers.com/packages/rpmforge-release/rpmforge-release-$0.3.6-1.el5.rf.i386.rpm\n$ rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm\n$ yum install git\n</pre>\n<h2>リポジトリを作る</h2>\nとりあえずコミットする人の名前とメールアドレスを登録しないといけないらしいので登録。これはサーバの方も同じ。\n<pre lang=\"bash\">\n$ git config --global user.email yuki.0w0[at]gmail.com\n$ git config --global user.name YukiAkamatsu\n</pre>\n<p>次にローカルのファイル群をcommitする。</p>\n<pre lang=\"bash\">\n$ cd ~/ukstudio.jp\n$ git init\n$ git add .\n$ git commit -m \"first commit\"\n</pre>\n<p>この状態だとまだローカル内での変更のみ。なので、この変更をサーバ側で受け取れるようにする。</p>\n<pre lang=\"bash\">\n# ukstudio.jpにログインした状態\n[ukstudio.jp]$ mkdir /var/git/ukstudio.jp\n[ukstudio.jp]$ cd /var/git/ukstudio.jp\n[ukstudio.jp]$ git init-db\n</pre>\n<p>んで、またローカルに戻ってさっきcommitしたのをpushして反映させる。</p>\n<pre lang=\"bash\">\n$ git remote add ukstudio.jp ssh://ukstudio@ukstudio.jp/var/git/ukstudio.jp\n$ git push ukstudio.jp ukstudio.jp master\n</pre>\n<p>最後に外部から見れるように配置する。</p>\n<pre lang=\"bash\">\n# ukstudio.jp\n[ukstudio.jp]$ cd /var/www/vhost/\n[ukstudio.jp]$ git clone /var/git/ukstudio.jp\n</pre>\n<p>これで/var/www/vhost/ukstudio.jpが作成されて、そこにずらーっとファイルができてるはず。とりあえずこれでukstudio.jpをgitで管理できるようになった。(と思う)</p>\n<h2>ローカルで変更を加えてみる</h2>\n本当にうまく管理できているのか、適当なファイルを作って確かめてみたいと思う。\n<pre lang=\"bash\">\n$ cd ~/ukstudio.jp\n$ touch hoge.txt\n$ git add hoge.txt\n$ git commit -m \"commit test\"\n$ git push ukstudio.jp master\n\n#ukstudio.jp\n[ukstudio.jp]$ cd ~/var/www/vhost/ukstudio.jp\n[ukstudio.jp]$ git pull\n</pre>\n<p>これでhoge.txtがあれば、うまく管理できてることになると思う。</p>\n<p>そんな感じで、とりあえずしばらくはgitを使ってみようかなーと思う。「git log -p」とやるとコミットログがdiff付きでみれて便利。</p>\n<h3>参考</h3>\n<a href=\"http://www8.atwiki.jp/git_jp/pub/Documentation.ja/user-manual.html\">Git ユーザマニュアル(1.5.3以降)</a>\n<a href=\"http://www8.atwiki.jp/git_jp/pub/Documentation.ja/tutorial.html\">Gitチュートリアル(1.5.1以降)</a>\n<a href=\"http://www.nofuture.tv/index.rb?GitMemo\">Gitメモ</a>\n<a href=\"http://blog.champierre.com/archives/670\">せっかちな人のためのgit入門</a>\n<a href=\"http://www.kaeruspoon.net/articles/477\">バージョン管理をsubversionからgitに移行してみた</a>\n<h2>SSHについて補足</h2>\nサーバへのSSH接続は鍵認証でやっています。秘密鍵を~/.ssh/id_dsa_ukstudio.jpで保存して、~/.ssh/configに以下のように書いています。\n<pre lang=\"bash\">\nHost ukstudio.jp\nIdentityFile ~/.ssh/id_dsa_ukstudio.jp\nProtocol 2,1\n</pre>","frontmatter":{"title":"ukstudio.jpをgitで管理するようにしてみた","date":"July 27, 2008","description":null}},"previous":{"fields":{"slug":"posts//2008/07/23/categories_and_tags_in_order/"},"frontmatter":{"title":"カテゴリとタグを整理しました"}},"next":{"fields":{"slug":"posts//2008/07/29/iphone_seminar/"},"frontmatter":{"title":"Apple主催のiPhoneアプリケーション開発入門セミナーに参加してきた"}}},"pageContext":{"id":"28f3bed8-004b-5525-b326-6de961074c52","previousPostId":"29bbf217-48f2-5b90-aac2-047af87efbcf","nextPostId":"5f304c10-6b4a-558a-ad03-7d368e604aba"}},"staticQueryHashes":["2841359383"]}