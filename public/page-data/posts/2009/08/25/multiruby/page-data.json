{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2009/08/25/multiruby/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"f380fa45-6a3b-56f5-98ce-2af66aea9aa0","excerpt":"現在は、以下の方法よりrvmを使うことをオススメします。 10/05/28 追記 ローカルに開発環境としてRuby1.8.7とRuby1.9.2を共存させる方法。 まず、Ruby1.9.2から。 —prefixでインストール箇所を指定。自分の$HOME以下のどこかにいれるのが最近のマイブーム。この後でてくるgem…","html":"<p><strong>現在は、以下の方法より<a href=\"http://rvm.beginrescueend.com/\">rvm</a>を使うことをオススメします。 10/05/28 追記</strong></p>\n<p>ローカルに開発環境としてRuby1.8.7とRuby1.9.2を共存させる方法。</p>\n<h2>Rubyのインストール</h2>\nまずはRubyの処理系をインストール。<a href=\"http://www.ruby-lang.org/ja/\">ruby-lang.org</a>から適当に落とす。今回はruby 1.8.7-p174とruby 1.9.2-preview1を使用。\n<p>まず、Ruby1.9.2から。</p>\n<pre><code>$ ./configure --prefix=/Users/uk/local --program-suffix=-1.9.2\n$ make\n$ make install\n</code></pre>\n<p>—prefixでインストール箇所を指定。自分の$HOME以下のどこかにいれるのが最近のマイブーム。この後でてくるgemも$HOME以下。Rubyはともかくgemは$HOME以下を推奨する。ある程度有名なライブラリならいいが、適当な野良ライブラリをインストールするにはこちらの方が安心な為。</p>\n<p>—program-suffixを指定するとインストールしたバイナリの後ろに指定した文字列を付加できる。この例だと「ruby-1.9.2」となる。他の処理系と分けるためこの指定は必須。</p>\n<p>次に同じ要領で1.8.7もインストール。やることは同じ。</p>\n<pre><code>$ ./configure --prefix/Users/uk/local --program-suffix=-1.8.7\n$ make\n$ make install\n</code></pre>\n<p>これでそれぞれのバイナリが/Users/uk/local/binに入っている状態となる。</p>\n<h2>RubyGems</h2>\n次にgemの設定。Ruby1.9からはgemが標準で入っている為、インストールは必要ない。ただバージョンが1.3.4なのでアップデートしておくといいだろう。\n<p>1.8.7は別途gemをインストールする。<a href=\"http://rubyforge.org/projects/rubygems/\">RubyForgeにプロジェクトがある</a>のでそこからダウンロードしてくる。</p>\n<pre><code>$ ruby-1.8.7 setup.rb\n</code></pre>\n<p>それぞれのgemのenvを見ておくと、インストールしたライブラリがどこに保存されるかわかる。</p>\n<pre><code>$ gem-1.9.2 env\n$ gem-1.8.7 env\n</code></pre>\n<p>それぞれ、GEM PATHSの先頭が/Users/uk/local/lib/ruby/gems/1.8と/Users/uk/local/lib/ruby/gems/1.9.1(何で1.9.2じゃないのかはわからん)になっているはずだ。今後、gemを使ってライブラリをインストールするときはsudoは必要ない。</p>\n<h2>シンボリックリンク</h2>\nこの時点でRuby1.9.2とRuby1.8.7がそれぞれ使える状態になってはいるが、いちいちバージョンを指定するのも面倒なので、シンボリックリンクで対応する。riとかも必要に応じて作る。\n<pre><code>$ ln -s ~/local/bin/ruby-1.8.7 ~/local/bin/ruby\n$ ln -s ~/local/bin/irb-1.8.7 ~/local/bin/irb\n$ ln -s ~/local/bin/gem-1.8.7 ~/local/bin/gem\n</code></pre>\n<p>Ruby1.9.2を使いたいときは、一度シンボリックリンクを消し、再度作りなおす。</p>\n<p>とは言え、その作業を手動で行うのは手間なのでスクリプトで対応するのがオススメ。5分ぐらいで書いたスクリプトをgistに貼っておいた。実行権限を与えて、引数にバージョンを与えると使えるはずだ。PATHとCMDは適当に書き換えること。そのうちもうちょっとマシなものに書き直すかも。</p>\n<script src=\"http://gist.github.com/174406.js\"></script>\n<h2>まとめ</h2>\nとりあえず、こんな感じでRuby1.9.2とRuby1.8.7を共存させてみた。いくつか、気になる点があって例えばgemでRailsをインストールするとシェバングが「#!/Users/uk/local/bin/ruby-1.9.2」となっており、シンボリックリンクを用意しただけではダメな時もある。その時はとりあえず諦めて以下の様に実行している。\n<pre><code>$ ruby -S Rails hoge\n</code></pre>\n<p>実際にこの環境で開発するのはこれからなので、もしかしたらそのうち色々な問題もでてくる可能性はあるが、とりあえずこの環境でやってみようと思う。</p>","frontmatter":{"title":"Ruby1.8.7とRuby1.9.2を共存させる","date":"August 25, 2009","description":null}},"previous":{"fields":{"slug":"posts//2009/08/20/review_kinesis/"},"frontmatter":{"title":"Kinesisを2週間使ったのでレビューする"}},"next":{"fields":{"slug":"posts//2009/09/24/gae_account_for_android/"},"frontmatter":{"title":"Android携帯しか持っていない人がGAEのアカウントを作る方法"}}},"pageContext":{"id":"f380fa45-6a3b-56f5-98ce-2af66aea9aa0","previousPostId":"ecd7d050-056a-5f0d-a16e-a8aafdc37adf","nextPostId":"e993a769-f9b8-5053-bc1b-d3f4984e9c06"}},"staticQueryHashes":["2841359383"]}