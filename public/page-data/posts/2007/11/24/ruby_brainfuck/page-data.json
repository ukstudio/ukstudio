{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2007/11/24/ruby_brainfuck/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"99f28f16-6ce5-5712-8421-1fcab0c7e933","excerpt":"こんな感じで使う。 bf = BrainFuck.new\np bf.convert(hello) #=> Hello との処理内容が似てるのが気になる。似てるっていうかほとんど一緒なんだよね。なんかこううまく抽象化することはできないものか。あと無意味にインスタンス変数使い過ぎだな。","html":"<pre lang=\"ruby\">\nclass BrainFuck\n  def convert(code)\n    @code = code\n    @memory = Array.new\n    @code_ptr = @mem_ptr = 0\n    @output = \"\"\n\n    while @code.size > @code_ptr\n      @memory[@mem_ptr] ||= 0\n\n      case @code[@code_ptr]\n      when ?>\n        @mem_ptr += 1\n      when ?< raise ArgumentError if @mem_ptr.zero?\n        @mem_ptr -= 1\n      when ?+\n        @memory[@mem_ptr] += 1\n      when ?-\n        @memory[@mem_ptr] -= 1\n      when ?.\n        @output += @memory[@mem_ptr].chr\n      when ?,\n        @memory[@mem_ptr] = $stdin.getc\n      when ?[\n        if @memory[@mem_ptr].zero?\n          nest = 1\n          until nest.zero?\n            @code_ptr += 1\n            case @code[@code_ptr]\n            when ?[\n              nest += 1\n            when ?]\n              nest -= 1\n            end\n          end\n        end\n      when ?]\n        if @memory[@mem_ptr].nonzero?\n          nest = 1\n          until nest.zero?\n            @code_ptr -= 1\n            case @code[@code_ptr]\n            when ?[\n              nest -= 1\n            when ?]\n              nest += 1\n            end\n          end\n        end\n      end\n      @code_ptr += 1\n    end\n\n    return @output\n  end\nend\n</pre>\n<p>こんな感じで使う。</p>\n</pre><pre lang=\"ruby\">\nhello = \"++++++++[>+++++++++< -]>.\" # H\nhello += \"< +++++[>++++++< -]>-.\"         # e\nhello += \"< ++[>+++< -]>+.\"                      # l\nhello += \".\"                                                 # l\nhello += \"+++.\"                                          # o\n<p>bf = BrainFuck.new\np bf.convert(hello) #=> Hello</p>\n</pre>\n<p>[と]の処理内容が似てるのが気になる。似てるっていうかほとんど一緒なんだよね。なんかこううまく抽象化することはできないものか。あと無意味にインスタンス変数使い過ぎだな。</p>","frontmatter":{"title":"RubyでBrainFuck処理系を書いてみた","date":"November 24, 2007","description":null}},"previous":{"fields":{"slug":"posts//2007/11/22/re_startruby/"},"frontmatter":{"title":"Re: Try Ruby! 第1章"}},"next":{"fields":{"slug":"posts//2007/11/24/the_little_schemer/"},"frontmatter":{"title":"The Little Schemer"}}},"pageContext":{"id":"99f28f16-6ce5-5712-8421-1fcab0c7e933","previousPostId":"96bda395-aef9-55e9-8443-b377b2acb601","nextPostId":"b31c9b6d-2db4-52d8-b5c7-88ed60b28671"}},"staticQueryHashes":["2841359383"]}