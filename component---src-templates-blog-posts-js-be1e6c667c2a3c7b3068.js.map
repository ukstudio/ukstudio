{"version":3,"sources":["webpack:///./src/templates/blog-posts.js"],"names":["BlogPosts","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","display","flexWrap","justifyContent","padding","prevPath","rel","nextPath","pageQuery"],"mappings":"2FAAA,8GAsFeA,UAhFG,SAAC,GAAqC,IAAD,EAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQP,EAAKQ,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQT,SAAUA,EAAUK,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,yLAUJ,kBAAC,IAAD,CAAQL,SAAUA,EAAUK,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,wBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,0BAAMA,SAAS,YAAYjB,KAG/B,+BAAQQ,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,uBAQvB,yBAAKJ,UAAU,iBACb,wBACER,MAAO,CACLkB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfnB,UAAU,OACVoB,QAAS,IAGX,4BACE,kBAAC,OAAD,CAAMV,GAAIpB,EAAY+B,SAAUC,IAAI,QAApC,WAIF,4BACGhC,EAAYiC,UACX,kBAAC,OAAD,CAAMb,GAAIpB,EAAYiC,SAAUD,IAAI,QAApC,eAaP,IAAME,EAAS","file":"component---src-templates-blog-posts-js-be1e6c667c2a3c7b3068.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPosts = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            <Link to={pageContext.prevPath} rel=\"prev\">\n              ← Prev\n            </Link>\n          </li>\n          <li>\n            {pageContext.nextPath && (\n              <Link to={pageContext.nextPath} rel=\"next\">\n                 Next →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPosts\n\nexport const pageQuery = graphql`\n  query blogPosts($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}