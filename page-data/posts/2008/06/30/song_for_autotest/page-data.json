{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2008/06/30/song_for_autotest/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"887c2154-e110-5cfd-81c2-cc7926a9940b","excerpt":"かなりネタなエントリー。 Macにはsayコマンドと言うものがあって、入力した英単語とかをしゃべらせることができる。詳細はMacの手書き説明書さんが最近エントリー書いているのでそちらを見てくださいな。 Macが歌いだす！？ | Macの手書き説明書 んで、今回はそのsayコマンドを使って、autotest…","html":"<p>かなりネタなエントリー。</p>\n<p>Macにはsayコマンドと言うものがあって、入力した英単語とかをしゃべらせることができる。詳細はMacの手書き説明書さんが最近エントリー書いているのでそちらを見てくださいな。</p>\n<p><a href=\"http://veadardiary.blog29.fc2.com/blog-entry-1645.html\">Macが歌いだす！？ | Macの手書き説明書</a></p>\n<p>んで、今回はそのsayコマンドを使って、autotestの結果をしゃべらせよう!というネタ企画。実用性はほぼ皆無。</p>\n<p>まずは~/.autotestを修正。最下行に以下を追記する。既にgrowlの通知などの設定がある場合はそこにsayコマンドの実行文を追記すればOK。</p>\n<pre lang=\"ruby\">\nmodule Autotest::Growl\n  Autotest.add_hook :ran_command do |at|\n    results = [at.results].flatten.flatten.join(\"\\n\")\n    output = results.slice(/(\\d+)\\s+examples?,\\s*(\\d+)\\s+failures?(,\\s*(\\d+)\\s+not implemented)?/)\n    if output\n      if $~[2].to_i > 0\n        `say -v bad faild`\n      else\n        `say -v good success!`\n      end\n    end\n  end\nend\n</pre>\n<p>`で括っている2箇所でsayコマンドを実行している。失敗したときはbadな声で、成功したときはgoodな声で結果を通知する。他にも色んな声があるらしいので、そこらへんは好みで。</p>\n<pre lang=\"bash\">\nls /System/Library/Speech/Voices\n</pre>\n<p>とすると声の一覧がでるっぽい。</p>","frontmatter":{"title":"autotestの結果をMacのsayコマンドで通知する","date":"June 30, 2008","description":null}},"previous":{"fields":{"slug":"posts//2008/06/13/rails2_1min/"},"frontmatter":{"title":"Ruby on Rails 2.0アプリを10秒で作る2.0"}},"next":{"fields":{"slug":"posts//2008/07/03/release_crossreview/"},"frontmatter":{"title":"crossreviewがリリースされました!"}}},"pageContext":{"id":"887c2154-e110-5cfd-81c2-cc7926a9940b","previousPostId":"b3a5c4f4-e2f9-5bb0-af86-9aaf07501bde","nextPostId":"b0c91035-0a6e-5c4e-a0de-29352ee915c4"}},"staticQueryHashes":["2841359383"]}