{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2008/02/02/doukaku_lifegame/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"a50f1da9-85e8-5525-a659-6e71f4d8c057","excerpt":"どう書く?org #5581 久々にどう書くorgに投稿してみた。1個1個セルの周り調べてくのも面白みがないなと思って、生きてるセルの周りをスコア付けしてくやり方でやってみた。 生きてるセルに+10し、生きてるセルの周りに+1していく。最終的にスコアが3(まわりに…","html":"<p><a href=\"http://ja.doukaku.org/comment/5581/\">どう書く?org #5581</a></p>\n<p>久々にどう書くorgに投稿してみた。1個1個セルの周り調べてくのも面白みがないなと思って、生きてるセルの周りをスコア付けしてくやり方でやってみた。</p>\n<p>生きてるセルに+10し、生きてるセルの周りに+1していく。最終的にスコアが3(まわりに3つの生きてるセルがある)のセルは次世代で誕生するセルと判断。スコアが12もしくは13の(今の世代で生きてるセルで、まわりに2つもしくは3つの生きてるセルがある)のセルは次世代も維持するセルと判断。</p>\n<p>テストはWikipediaの<a href=\"http://ja.wikipedia.org/wiki/ライフゲーム\">ライフゲームのページ</a>から振動型(ブリンカー、ヒキガエルなど)を試しただけで、テストコードすら書いてない。だからもしかしたら間違ってるかもしれない。許せ。</p>\n<pre lang=\"ruby\">\nrequire 'curses'\n\nmodule LifeGame\n  class World\n    def initialize(map)\n      @map = map\n    end\n\n    def to_s\n      str = \"\"\n      @map.each do |line|\n        line.each do |cell|\n          str += \"[#{cell}]\"\n        end\n        str += \"¥n\"\n      end\n\n      str\n    end\n\n    def next\n      ranking.each_with_index do |line, h|\n        @map[h] = line.map {|cell| [3, 12, 13].include?(cell) ? '*' : ' ' }\n      end\n    end\n\n    private\n    def live_list\n      list = []\n      @map.each_with_index do |line, h|\n        line.each_with_index {|cell, w| list < < [h,w] if cell == '*'}\n      end\n\n      list\n    end\n\n    def set_score(rank_map, live)\n      (-1..1).each do |x|\n        (-1..1).each do |y|\n          score = x == y && y  == 0 ? 10 : 1\n          rank_map[live[0]+x][live[1]+y] = rank_map[live[0]+x][live[1]+y] + score\n        end\n      end\n    end\n\n    def ranking\n      rank_map = List.new\n      @map.size.times { rank_map << List.new(@map[0].size, 0) }\n\n      live_list.each do |live|\n        set_score(rank_map.clone, live)\n      end\n\n      rank_map\n    end\n  end\n\n  class List < Array\n    alias original_get []\n    alias original_set []=\n\n      def [](index)\n        original_get(index % size)\n      end\n\n    def []=(index, value)\n      original_set(index % size, value)\n    end\n  end\nend\n\nif __FILE__ == $0\n  begin\n    game = LifeGame::World.new([\n                                [' ', '*', ' ', ' ', ' ', ' ', '*', '*', '*', ' '],\n                                [' ', ' ', ' ', ' ', '*', ' ', ' ', '*', '*', ' '],\n                                [' ', ' ', ' ', '*', ' ', ' ', '*', ' ', '*', ' '],\n                                ['*', ' ', '*', '*', ' ', ' ', '*', ' ', ' ', ' '],\n                                [' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' '],\n                                ['*', ' ', ' ', ' ', '*', ' ', '*', '*', ' ', '*'],\n                                [' ', '*', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' '],\n                                [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'],\n                                ['*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', '*'],\n                                [' ', ' ', ' ', ' ', '*', '*', ' ', ' ', '*', ' ']])\n\n    window = Curses::Window.new(Curses.lines, Curses.cols, 0, 0)\n    loop do\n      window.setpos(0, 0)\n      window.addstr(game.to_s)\n      game.next\n      window.getch\n    end\n  ensure\n    window.close\n  end\nend\n</pre></pre>","frontmatter":{"title":"Rubyでライフゲーム書いた","date":"February 02, 2008","description":null}},"previous":{"fields":{"slug":"posts//2008/01/22/yaboo/"},"frontmatter":{"title":"野望新年会に参加してきました"}},"next":{"fields":{"slug":"posts//2008/02/07/programming_for_beginner/"},"frontmatter":{"title":"そろそろ「初心者用言語」について一言いっておくか"}}},"pageContext":{"id":"a50f1da9-85e8-5525-a659-6e71f4d8c057","previousPostId":"36cc028a-484f-5419-b24f-7c52e3fde3b2","nextPostId":"c9328d68-db44-528c-a911-3116ed60e90d"}},"staticQueryHashes":["2841359383"]}