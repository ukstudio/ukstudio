{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2008/11/26/rails_22_i18n/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"1f4c0bd7-4ec4-5ec6-b3ab-ad8cf5175438","excerpt":"11月21日にRails2.2が正式リリースされた。 RCなどでチェックしてた人は既に知っているかもしれないけど、2.2からデフォルトでi18n(国際化)対応がされている。 ちなみにi18nというのはinternationalizationの頭と後ろのiとn、文字数が1…","html":"<p>11月21日にRails2.2が正式リリースされた。 RCなどでチェックしてた人は既に知っているかもしれないけど、2.2からデフォルトでi18n(国際化)対応がされている。</p>\n<p>ちなみにi18nというのはinternationalizationの頭と後ろのiとn、文字数が18文字というところから来てるらしい。</p>\n<p>とりあえず、まずはアプリの作成。</p>\n<pre lang=\"bash\">\n$ rails i18n_demo\n</pre>\n<p>作成されたファイル群の中にconfig/locales/en.ymlというファイルが出来ていると思うけど、これが翻訳ファイルになる。今回は英語と日本語を用意しようと思うので、en.ymlをコピーしてja.ymlを作成する。</p>\n<pre lang=\"bash\">\n$ cp config/locales/en.yml config/locales/ja.yml\n</pre>\n<p>翻訳ファイルを修正しようにも、そもそもアプリケーションが出来ていないので、scaffoldで簡単に作ってしまおう。</p>\n<pre lang=\"bash\">\n$ ruby script/generate scaffold entry title:string body:text\n$ rake db:migrate\n</pre>\n<p>とりあえずは適当にサイトタイトル的なものでも作ってみよう。翻訳ファイルに関しては元々あった内容は削除してしまっていい。</p>\n<pre lang=\"ruby\">\n# config/locales/ja.yml\nja:\n  site_title: サイトタイトル\n</pre>\n<p>一応英語も。</p>\n<pre lang=\"ruby\">\n# config/locales/en.yml\nen:\n  site_title: SiteTitle\n</pre>\n<p>Viewの修正。</p>\n<pre lang=\"ruby\">\n# app/views/entries/index.html.erb\n<h1><%= I18n.t :site_title %></h1>\n</pre>\n<p>この状態でサーバーを起動し、<a href=\"http://localhost:3000/entries%E3%81%AB%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B%E3%80%82%E3%80%8CSiteTitle%E3%80%8D%E3%81%A8%E3%81%84%E3%81%86%E6%96%87%E5%AD%97%E3%81%8C%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AF%E3%81%9A%E3%81%A0%E3%80%82%E3%81%93%E3%81%AE%E7%8A%B6%E6%85%8B%E3%81%A0%E3%81%A8%E3%81%BE%E3%81%A0%E8%A8%80%E8%AA%9E%E3%81%8C%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E3%81%AE%E8%8B%B1%E8%AA%9E%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%81%AB%E3%81%AA%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%80%82%E5%A4%9A%E5%88%86%E3%80%81%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AE%E8%A8%80%E8%AA%9E%E8%A8%AD%E5%AE%9A%E3%81%A8%E3%81%8B%E3%81%AF%E8%A6%8B%E3%81%A6%E3%81%AA%E3%81%95%E3%81%92?%E3%80%82%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%92%E8%A6%8B%E3%81%A6%E3%81%AA%E3%81%84%E3%81%AE%E3%81%A7%E3%81%BE%E3%81%A0%E6%9C%AA%E7%A2%BA%E8%AA%8D%E3%80%82%E3%82%82%E3%81%97%E3%81%8B%E3%81%97%E3%81%9F%E3%82%89%E3%80%81%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%81%AE%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%82%92%E8%A6%8B%E3%81%A6%E8%A8%80%E8%AA%9E%E3%82%92%E6%B1%BA%E3%82%81%E3%82%8B%E9%83%A8%E5%88%86%E3%81%AF%E8%87%AA%E5%88%86%E3%81%A7%E5%AE%9F%E8%A3%85%E3%81%97%E3%81%AA%E3%81%8D%E3%82%83%E3%81%84%E3%81%91%E3%81%AA%E3%81%84%E3%81%AE%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84%E3%80%82\">http://localhost:3000/entriesにアクセスしてみる。「SiteTitle」という文字が表示されているはずだ。この状態だとまだ言語がデフォルトの英語の設定になっている。多分、ブラウザの言語設定とかは見てなさげ?。ちょっとソースを見てないのでまだ未確認。もしかしたら、リクエストのヘッダーを見て言語を決める部分は自分で実装しなきゃいけないのかもしれない。</a></p>\n<p>なんにせよ、日本語で表示したい場合は以下のようにする。</p>\n<pre lang=\"ruby\">\n# config/environment.rb\n# 最下行に追加\nI18n.default_locale = \"ja\"\n</pre>\n<p>これで再度アクセスすれば「サイトタイトル」と表示されているはずだ。</p>\n<p>次にGETパラメータで言語が切り替わるようにしてみよう。</p>\n<pre lang=\"ruby\">\n# app/controllers/application.rb\n\nbefore_filter :set_locale\ndef set_locale\n  I18n.locale = params[:locale]\nend\n</pre>\n<p>これで<a href=\"http://localhost:3000/entries?locale=en%E3%81%A7%E3%80%8CSiteTitle%E3%80%8D%E3%81%A8%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AF%E3%81%9A%E3%81%A0%E3%80%82\">http://localhost:3000/entries?locale=enで「SiteTitle」と表示されているはずだ。</a></p>\n<p>次にモデルの日本語化をしてみよう。まずはエラーメッセージを出すためにバリデーションを追加する。</p>\n<pre lang=\"ruby\">\n# app/model/entry.rb\nclass Entry < ActiveRecord::Base\n  validates_presence_of :title, :body\nend\n</pre>\n<p><a href=\"http://localhost:3000/entry/new%E3%81%A7%E3%83%95%E3%82%A9%E3%83%BC%E3%83%A0%E3%81%AB%E4%BD%95%E3%82%82%E5%85%A5%E5%8A%9B%E3%81%9B%E3%81%9A%E9%80%81%E4%BF%A1%E3%81%99%E3%82%8C%E3%81%B0%E3%82%A8%E3%83%A9%E3%83%BC%E3%81%8C%E3%81%A7%E3%82%8B%E3%81%AE%E3%81%A7%E8%8B%B1%E8%AA%9E%E3%81%A7%E8%A1%A8%E7%A4%BA%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%81%93%E3%81%A8%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B%E3%80%82\">http://localhost:3000/entry/newでフォームに何も入力せず送信すればエラーがでるので英語で表示されていることを確認する。</a></p>\n<p><a href=\"http://ukstudio.jp/wp-content/uploads/2008/11/082611_i18n_en_error.jpg\"><img src=\"http://ukstudio.jp/wp-content/uploads/2008/11/082611_i18n_en_error.jpg\" alt title=\"082611_i18n_en_error\" width=\"300\" height=\"281\" class=\"alignnone size-medium wp-image-257\"></a></p>\n<p>普通のバリデーションのエラーとは違うエラーがでているけど、これは翻訳ファイルをちゃんと書いてないからでているエラー。英語の方はちょっと面倒なので無視するが、とりあえず日本語化をすすめる。</p>\n<pre lang=\"ruby\">\n#config/locales/ja.yml\nja:\n  site_title: サイトタイトル\n    activerecord:\n      errors:\n        template:\n          header: \"{{model}}でエラーが発生しました。\"\n          body:   以下のエラー内容を確認してください。\n        messages:\n          blank:  が空白です。\n      models:\n        entry: エントリー\n      attributes:\n        entry:\n          title: タイトル\n          body: 本文\n</pre>\n<p>以上の修正をして、もう一度エラーを出してみるとエラーが日本語に変わっているはずだ。翻訳ファイルのどの部分がどの部分に対応してるかは雰囲気でわかると思う。</p>\n<p><a href=\"http://ukstudio.jp/wp-content/uploads/2008/11/081126_i18n_ja_error.jpg\"><img src=\"http://ukstudio.jp/wp-content/uploads/2008/11/081126_i18n_ja_error.jpg\" alt title=\"081126_i18n_ja_error\" width=\"300\" height=\"225\" class=\"alignnone size-medium wp-image-258\"></a></p>\n<p>今回は必要な部分だけ翻訳したけど、もうちょっとちゃんとした翻訳ファイルが必要なら<a href=\"http://i18n-demo.phusion.nl/pages/setup\">Railsをローカライズする</a>も参考にするといいと思う。</p>\n<p>諸々めんどくせー!って人は松田さんの<a href=\"http://blog.dio.jp/2008/11/22/japanizing-rails-2-2-by-i18n-generators\">Rails 2.2の I18nによる日本語化を最も簡単に行う方法</a>へどうぞ。gemで一発です。</p>\n<p>まだ2.2はリリースされたばかりで、i18nまわりの日本語の情報はあまり多くはないと思うけど、そこまで複雑な仕組みでもないし、翻訳ファイルに関して言えば基本的な部分(ActiveRecordとか)は使い回しができるので手間もそこまで大きくはないと思う。ブラウザの言語設定での判断もそのうちプラグインがでてくるんじゃないかと思っている。</p>\n<p>「国際化とか必要ないよー」の人も、バリデーションのエラーを日本語化するのにgettextを入れる必要がなくなったりとこれでかなりラクになるんじゃなかろうか。</p>","frontmatter":{"title":"Rails2.2のi18n(国際化)を簡単に試してみた","date":"November 26, 2008","description":null}},"previous":{"fields":{"slug":"posts//2008/11/23/vimm3-2/"},"frontmatter":{"title":"VimM#3を開催してきました"}},"next":{"fields":{"slug":"posts//2008/11/27/mac_gem_install_mysql/"},"frontmatter":{"title":"Macでgem install mysqlをする方法"}}},"pageContext":{"id":"1f4c0bd7-4ec4-5ec6-b3ab-ad8cf5175438","previousPostId":"31571c69-986c-51f2-b0ea-f79119e5cf0a","nextPostId":"0bebcf4c-becf-54f3-bc19-0d98a7a13462"}},"staticQueryHashes":["2841359383"]}