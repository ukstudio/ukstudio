{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2008/08/25/selenium_on_rspec/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"e9022500-bd4f-5090-9620-70b2b71c8842","excerpt":"とりあえずはScaffoldで簡単なアプリを作って、そのテストケースを作成、実行してみるところまで。そんな難しいことはしない。Railsは2.0.2を使用。2.1だとSeleniumにパッチを当てなきゃいけないので面倒。2.1の人はSelenium on Rails patch for RoR 2.…","html":"<p>とりあえずはScaffoldで簡単なアプリを作って、そのテストケースを作成、実行してみるところまで。そんな難しいことはしない。Railsは2.0.2を使用。2.1だとSeleniumにパッチを当てなきゃいけないので面倒。2.1の人は<a href=\"http://clearspace.openqa.org/docs/DOC-1072\">Selenium on Rails patch for RoR 2.1</a>からパッチをあててください。</p>\n<h3>準備</h3>\nまずは準備としてプラグインのインストールと、Scaffoldで簡単なアプリを作成する。\n<pre lang=\"ruby\">\n$ rails _2.0.2_ blog\n$ cd blog\n$ ruby script/plugin install http://svn.openqa.org/svn/selenium-on-rails/selenium-on-rails\n$ ruby script/generate scaffold entry title:string description:text\n$ rake db:migrate\n</pre>\n<p>ここまでできたらtest環境でサーバーを起動し、seleniumがちゃんと起動するか確認する。</p>\n<pre lang=\"ruby\">\n$ ruby script/server -e test\n</pre>\n<p>そうすると下記エラーがでるが、sessionをデータベースであつかうように変更するととりあえず回避できる。原因はよくわかんない。</p>\n<blockquote>\nCGI::Session::CookieStore::TamperedWithCookie in SeleniumController#support_file\n</blockquote>\n<p>sessionをデータベースで扱うようにするにはconfig/environment.rbの47行目のコメントアウトをはずし、migrateする。</p>\n<pre lang=\"ruby\">\nconfig.action_controller.session_store = :active_record_store\n</pre>\n<pre lang=\"bash\">\n$ rake db:sessions:create\n$ rake db:migrate\n$ rake db:test:prepare\n$ ruby script/server -e test\n</pre>\n<p>ブラウザで<a href=\"http://localhost:3000/selenium/%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%97%E3%81%A6%E4%BB%A5%E4%B8%8B%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E7%94%BB%E9%9D%A2%E3%81%AB%E3%81%AA%E3%82%8C%E3%81%B0OK%E3%80%82\">http://localhost:3000/selenium/を表示して以下のような画面になればOK。</a></p>\n<p>[caption id=“attachment_171” align=“alignnone” width=“300” caption=“Selenium初期画面”]<a href=\"http://ukstudio.jp/wp-content/uploads/2008/08/init-selenium.jpg\"><img src=\"http://ukstudio.jp/wp-content/uploads/2008/08/init-selenium.jpg\" alt=\"Selenium&#x521D;&#x671F;&#x753B;&#x9762;\" title=\"Selenium&#x521D;&#x671F;&#x753B;&#x9762;\" width=\"300\" height=\"240\" class=\"size-medium wp-image-171\"></a>[/caption]</p>\n<h3>テストケースの作成</h3>\n次にテストケースを作成する。SeleniumはテストケースをHTMLで書くので手書きでも書けるけど、面倒なのでFirefoxのaddonの1つ、<a href=\"https://addons.mozilla.org/ja/firefox/addon/2079\">Selenium IDE</a>を使用する。\n<p>Selenium IDEを使用すると、自分の操作を記録しそのままテストケースに変換できるので非常にラク。Selenium IDEを開き、右上の赤いボタンを押すと操作の記録が始まる。あとはテストしたい操作を手動で行なえばいい。</p>\n<p>[caption id=“attachment_177” align=“aligncenter” width=“242” caption=“Selenium IDE”]<a href=\"http://ukstudio.jp/wp-content/uploads/2008/08/selenium-ide.jpg\"><img src=\"http://ukstudio.jp/wp-content/uploads/2008/08/selenium-ide.jpg\" alt=\"Selenium IDE\" title=\"Selenium IDE\" width=\"242\" height=\"300\" class=\"size-medium wp-image-177\"></a>[/caption]</p>\n<p>今回のテストは「/entriesにアクセスし、そこから/entries/newに移動、タイトルと詳細を入力・保存し、/entries/showでタイトルが実際に表示されている」という内容にした。基本的には記録ボタンを押し、そのまま普通に入力していけばいい。最期の「タイトルが実際に表示されている」というものに関しては文言を範囲選択し、右クリックしverifyTextPresentを選択すればいい。</p>\n<p>[caption id=“attachment_180” align=“aligncenter” width=“251” caption=“verityTextPresent”]<a href=\"http://ukstudio.jp/wp-content/uploads/2008/08/selenium-ide-veritytextpresent1.jpg\"><img src=\"http://ukstudio.jp/wp-content/uploads/2008/08/selenium-ide-veritytextpresent1.jpg\" alt=\"verityTextPresent\" title=\"verityTextPresent\" width=\"251\" height=\"300\" class=\"size-medium wp-image-180\"></a>[/caption]</p>\n<p>ここまでできたらもう一度赤いボタンを押し、操作の記録を終了させる。最期に今の操作をテストケースとして出力させればいい。</p>\n<p>出力方法はIDEのウィンドウにフォーカスを合わせて、ファイル > テストケースに名前をつけて保存。ここではファイル名はadd<em>entryとしといた。本来なら命名規約的なものもあった方がいいかもしれないけどここでは気にしないことにする。保存先はseleniumに読み込ませるため、RAILS</em>ROOT/test/selenium/以下に保存。</p>\n<p>以上でテストケースの作成は完了。</p>\n<h3>テストの実行</h3>\nもう一度http://localhost:3000/selenium/を開くと、今つくったテストケースが読み込まれているはず。あとはそのテストを右側のSelenium TestRunnerから実行すると、ブラウザがガチャガチャ動いてテストケースを実行してくれる。\n<p>今回はさっきのテストケースを作ってから何も変更を加えていないので、オールグリーンになるはず。</p>\n<h3>まとめ</h3>\nかなり単純なケースだけど、大体テストケースの作成から実行までを試してみた。まぁとりあえず導入してみるには丁度いいレベルかなと。Selenium IDEを使用すればプログラマ/エンジニアじゃなくてもテスト書けそうだし。\n<p>あとは確かSelenium on Railsの機能にfixturesのロード機能とかあった気がするので、その辺りも調べていきたいと思う。</p>","frontmatter":{"title":"Selenium on Rspecを軽く試してみた","date":"August 25, 2008","description":null}},"previous":{"fields":{"slug":"posts//2008/08/13/ruby_on_rails_partial/"},"frontmatter":{"title":"Railsのpartialの使い方"}},"next":{"fields":{"slug":"posts//2008/08/31/web_design_questionnaire/"},"frontmatter":{"title":"wuたんのWebデザインに関するアンケートにご協力を。"}}},"pageContext":{"id":"e9022500-bd4f-5090-9620-70b2b71c8842","previousPostId":"c3421787-b9d7-5d13-994b-4aaa379024f1","nextPostId":"f82849ae-e70f-5894-aafa-0a8a2f92f942"}},"staticQueryHashes":["2841359383"]}