{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2011/04/19/coffeescript-qunit/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"9257c166-140e-5e81-b7dc-7dcb29f4781b","excerpt":"Rails3.1からCoffeeScriptがデフォルトで入ってるとかなんとかで、とりあえずCoffeeScriptだけで少し触ってみた。とりあえずQUnit自体もCoffeeScriptで書けるようなTDD環境を作ってみた。 とりあえず、UbuntuにCoffeeScriptをインストールするわけだけどapt…","html":"<p>Rails3.1からCoffeeScriptがデフォルトで入ってるとかなんとかで、とりあえずCoffeeScriptだけで少し触ってみた。とりあえずQUnit自体もCoffeeScriptで書けるようなTDD環境を作ってみた。</p>\n<p>とりあえず、UbuntuにCoffeeScriptをインストールするわけだけどaptの方が古いしせっかくだから最新のを触るかと思ったのでgithubからCoffeeScriptとnode.jsのリポジトリをcloneしてインストール。</p>\n<pre>$ git clone git://github.com/joyent/node.git \n$ cd node\n$ ./configure\n$ make\n$ sudo make install\n$ node -v\nv0.5.0-pre</code></pre>\n<pre><code>$ git clone git://github.com/jashkenas/coffee-script.git\n$ cd coffee-script\n$ sudo bin/cake install\n$ coffee -v\nCoffeeScript version 1.1.0-pre</code></pre>\n<p>ディレクトリ構成はこんな感じ。coffeeにCoffeeScriptに入れて生成されたJavaScriptはsrcにいれるルール。test/index.htmlはQUnitの結果を見るため。test/qunitはずばりQUnitそのもの。</p>\n<pre>./coffee/hello.coffee\n./src/hello.js\n./test/index.html\n./test/qunit/qunit.css\n./test/qunit/qunit.js\n./test/coffee/test-hello.coffee\n./test/src/test-hello.js</pre>\n<p>CoffeeScriptは-wでファイルの変更を監視してコンパイルしなおすことができるので,以下の用に実行しておけばそれぞれ変更があったらコンパイルしてくれる。CoffeeScriptはデフォルトでfunction(){}();で囲って外部からアクセスできなくなるので,-bを付けてトップレベルにJavaScriptを生成するようにする。</p>\n<pre>$ coffee -w -b -o src/ -c coffee</pre>\n<pre>$ coffee -w -b -o test/src -c test/coffee</pre>\n<p>これでテストコードもしくは本体のコードを修正すれば勝手にコンパイルするのでtest/index.htmlを見ればよい。後はもうちょい頑張ってブラウザを勝手にリロードするか,Rhinoとか使えばindex.htmlを用意しなくてもCUIでテスト結果をみれそう。</p>\n<p>一式は以下のgistに置いた。(Qunitはライセンス見てないので外してある)\n<a href=\"https://gist.github.com/925753\">CoffeeScript+QUnit — Gist</a></p>","frontmatter":{"title":"CoffeeScript + QUnitでTDD環境作ったよ","date":"April 19, 2011","description":null}},"previous":{"fields":{"slug":"posts//2011/04/11/odrk01/"},"frontmatter":{"title":"大江戸Ruby会議01で発表してきました"}},"next":{"fields":{"slug":"posts//2011/05/09/build_vim/"},"frontmatter":{"title":"Vimをソースからビルド"}}},"pageContext":{"id":"9257c166-140e-5e81-b7dc-7dcb29f4781b","previousPostId":"6b276d71-b4ba-5a25-9be4-2df05f48b492","nextPostId":"d1df31e8-6f6e-5614-a0df-b492b127a7b7"}},"staticQueryHashes":["2841359383"]}