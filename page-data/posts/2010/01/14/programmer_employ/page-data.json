{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts//2010/01/14/programmer_employ/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"569d44f2-48cb-5a59-85aa-2dfbfac30309","excerpt":"…","html":"<p>考えるきっかけになったのは、最近話題になっている以下のエントリ。</p>\n<p><a href=\"http://okajima.air-nifty.com/b/2010/01/post-abc6.html\">人生を書き換える者すらいた。: 人材獲得作戦・４　試験問題ほか</a></p>\n<p>個人的に、あるアルゴリズムを用いて解くような問題を採用試験にだすのはどうかと思っていた。理由としてはいくつかあるのだけれど、「業務でそういったアルゴリズムを使うことが少ない(為、そういう知識がない」「知っている人と知らない人とで差がでてしまう」などなど。</p>\n<p>で、先程Twitterに発言しながら似たようなことを考えていたのだけど、よくよく考えると上記の理由は「採用される側」での意見ということに気づいた。</p>\n<p>まず、「採用する側」で一番避けたいのは、「ダメな人を雇ってしまわない」ということ。優秀な人を間違って落してしまうのも勿体無い話ではあるが、ダメな人を雇ってしまうよりはマシだ。そうなると採用試験では、その「ダメな人」を確実に篩い落したいわけだ。</p>\n<p>大体において、業務で使わないようなアルゴリズムを知っている人は優秀である可能性が高い。「知識の差で合否が決まるのか」という話もあるが、知っている人は独自で勉強をしているだろうし、それをきちんとこういう問題にあてはめられる人はやはり優秀な人が多いのではなかろうか。</p>\n<p>逆に言うと、それ以外の人は「ダメな人」である可能性が高いのであって、採用側がこのような問題を用いるのは割と理にかなっている。</p>\n<p>それに仮にアルゴリズムを知らなくても、プログラマの基礎能力として「アルゴリズムを自分で考えられる」というのは大事なので、「私はこのアルゴリズムを知らないので理不尽だ」というのも結局自分のダメさアピールにしかならない。</p>\n<p>採用試験をある種のフィルタと考えた場合、取り零しよりそのフィルタを抜けてきた人が重要という点を考えれば、この様な採用試験はかなり有効だと思われる。</p>","frontmatter":{"title":"プログラマの採用について考えてみる","date":"January 14, 2010","description":null}},"previous":{"fields":{"slug":"posts//2010/01/06/tddbc/"},"frontmatter":{"title":"TDD Boot Campに参加してきました"}},"next":{"fields":{"slug":"posts//2010/01/19/design_pattern/"},"frontmatter":{"title":"Twitterで好きなデザインパターン、嫌いなデザインパターンを聞いてみた"}}},"pageContext":{"id":"569d44f2-48cb-5a59-85aa-2dfbfac30309","previousPostId":"7faabcf7-6bee-5ca2-bc8f-152d44571c35","nextPostId":"9142883b-b6e3-5538-9319-99e5858f5948"}},"staticQueryHashes":["2841359383"]}