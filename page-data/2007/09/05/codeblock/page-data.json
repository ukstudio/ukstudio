{"componentChunkName":"component---src-templates-blog-post-js","path":"/2007/09/05/codeblock/","result":{"data":{"site":{"siteMetadata":{"title":"UKSTUDIO BLOG"}},"markdownRemark":{"id":"2beb2bb0-9ca5-5f9d-83cc-145fd75ccaa8","excerpt":"メソッド内でyield文を使うことでメソッドからコードブロックを呼び出すことができます。yield文が呼び出されるたびに、ブロックに処理が移り、処理が終わるとyieldの直後の処理に移ります。 ブロックで引数を使いたいときはこんな感じ。yield…","html":"<p>メソッド内でyield文を使うことでメソッドからコードブロックを呼び出すことができます。yield文が呼び出されるたびに、ブロックに処理が移り、処理が終わるとyieldの直後の処理に移ります。</p>\n<pre lang=\"ruby\">def exec_block\n  yield\n  puts \"hoge\"\nend\n\nexec_block{ puts \"Hello,World\"}\n\n-----\nHello,Wold\nhoge</pre>\n<p>ブロックで引数を使いたいときはこんな感じ。yield文に値を与えることでブロックからその値を変数として呼ぶことができます。</p>\n<pre lang=\"ruby\">\ndef exec_block\n  yield(\"foo\", 3)\nend\n\nexec_block {|str,num| puts str * num}\n\n-----\nfoofoofoo</pre>\n<p>ちなみに当たり前ですが、ブロックはブレース{}でなくても、do endでも問題ありません。１行のブロックの場合にはブレース、複数行の場合にdo endが一般的なようです。</p>\n<p>コードブロックを使うとイテレータが実装できますけど、大抵は組み込みのもので事足りるのであまり自分でイテレータを作るっていうのは少ないのかもしれないですね。ま、Rubyの経験が少ないのでよくわかりませんが。</p>","frontmatter":{"title":"コードブロックとyield文","date":"September 05, 2007","description":null}},"previous":{"fields":{"slug":"/2007/08/22/job_change/"},"frontmatter":{"title":"職場を変えようと思います"}},"next":{"fields":{"slug":"/2007/09/07/ipod_touch/"},"frontmatter":{"title":"iPod touchを予約しました"}}},"pageContext":{"id":"2beb2bb0-9ca5-5f9d-83cc-145fd75ccaa8","previousPostId":"dbad7a3a-a74b-5b6c-86d8-d44fd9605056","nextPostId":"84c4888b-da19-5f9e-89c2-7ba777b30903"}},"staticQueryHashes":["2841359383"]}